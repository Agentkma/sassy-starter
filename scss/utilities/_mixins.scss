// ==========================================================================
// Mixins
// Thanks to @sutterlity
// https://github.com/sutter/POPY-Starter-integration-web/blob/master/scss/tools/_mixins.scss
// ==========================================================================

// ============================================================
// = Buttons
// ============================================================
// This customises your buttons with a different background color and text color.
// If no text color is specified it will default to white.

@mixin btn($color-background, $color-text: #fff) {
  background-color: $color-background;
  border-color: darken($color-border, 6%);
  color: $color-text;
}

// ============================================================
// = Media Queries
// ============================================================
// Allows you to use inline media queries.
// @see http://jakearchibald.github.com/sass-ie/

// @example
// .foobar { @include mq(20em) { ... } }

@mixin mq($breakpoint, $query: 'min-width', $type: 'screen') { // breakpoint can be a variable
  // if media queries are not supported
  @if $fix-mqs {
    @if $fix-mqs >= $breakpoint { // ...and if the fixed breakpoint is greater than query...
      @content; // ...output the content the user gave us.
    }
  }
  // Otherwise, output it using a regular media query
  @else {
    @media #{$type} and (#{$query}: #{$breakpoint}) { @content; }
  }
 }

// ============================================================
// = IE Specific Styles
// ============================================================

// @example
// .foobar {
//   .lt-ie8 & { @include old-ie { ... } }
//   .lt-ie9 & { @include old-ie { ... } }
// }

@mixin old-ie {
  @if $old-ie {
     @content;
  }
}

// ============================================================
// = Sticky Footer
// ============================================================
@mixin sticky-footer($footer_height, $root_selector:".site", $root_footer_selector:".push", $footer_selector:"footer") {
  html, body {height: 100%;}
  #{$root_selector} {
    width: 100%;
    min-height: 100%;
    height: auto !important;
    height: 100%;
    margin: 0 auto -#{$footer_height};
    #{$root_footer_selector} {
      height: #{$footer_height};
    }
  }
  #{$footer_selector} {
    clear: both;
    position: relative;
    height: #{$footer_height};
  }
}

// ============================================================
// = Fullscreen Background for < IE8
// ============================================================
@mixin fullscreen-bg() {
  position: fixed;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  img {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    min-width: 50%;
    min-height: 50%;
  }
}

// ============================================================
// = Opacity
// ============================================================
@mixin opacity($opacity) {
  filter: unquote("progid:DXImageTransform.Microsoft.Alpha(Opacity=#{round($opacity * 100)})");
  opacity: $opacity;

  /* Hack IE6 */
  .lt-ie7 & {
    filter : alpha(opacity=#{round($opacity * 100)});
    zoom: 1;
  }
}

// ============================================================
// = Transition
// ============================================================
@mixin transition ($transition : all .3s ease-in-out) {
  @include prefixer(transition, $transition, webkit moz ms o spec);
}

// ============================================================
// = Box-sizing
// ============================================================
@mixin box-sizing ($box : border-box) {
  //  content-box | border-box | inherit
  @include prefixer(box-sizing, $box, webkit moz spec);
}

// ============================================================
// = Transform
// ============================================================
@mixin transform($property: none) {
  @include prefixer(transform, $property, webkit moz ms o spec);
}

@mixin transform-origin($axes: 50%) {
  @include prefixer(transform-origin, $axes, webkit moz ms o spec);
}

@mixin transform-style ($style: flat) {
  @include prefixer(transform-style, $style, webkit moz ms o spec);
}

// ============================================================
// = Keyframes
// ============================================================
@mixin keyframes($name) {
  $original-prefix-for-webkit:    $prefix-for-webkit;
  $original-prefix-for-mozilla:   $prefix-for-mozilla;
  $original-prefix-for-microsoft: $prefix-for-microsoft;
  $original-prefix-for-opera:     $prefix-for-opera;
  $original-prefix-for-spec:      $prefix-for-spec;

  @if $original-prefix-for-webkit {
    @include disable-prefix-for-all();
    $prefix-for-webkit: true;
    @-webkit-keyframes #{$name} {
        @content;
    }
  }
  @if $original-prefix-for-mozilla {
    @include disable-prefix-for-all();
    $prefix-for-mozilla: true;
    @-moz-keyframes #{$name} {
        @content;
    }
  }
  @if $original-prefix-for-spec {
    @include disable-prefix-for-all();
    $prefix-for-spec: true;
    @keyframes #{$name} {
        @content;
    }
  }

  $prefix-for-webkit:    $original-prefix-for-webkit   ;
  $prefix-for-mozilla:   $original-prefix-for-mozilla  ;
  $prefix-for-microsoft: $original-prefix-for-microsoft;
  $prefix-for-opera:     $original-prefix-for-opera    ;
  $prefix-for-spec:      $original-prefix-for-spec     ;
}

// ============================================================
// = Calc
// ============================================================
@mixin calc($property, $expression) {
  #{$property}: -moz-calc(#{$expression});
  #{$property}: -o-calc(#{$expression});
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

// ============================================================
// Inline Block
// Custom version of http://bit.ly/thoughtbot-bourbon-inline-block
// ============================================================

@mixin inline-block($alignment: baseline) {
  display: inline-block;
  @if $alignment and $alignment != none {
    vertical-align: $alignment;
  }
  @include old-ie {
    zoom:1;
    *display:inline;
    *vertical-align:auto;
  }
}

// ============================================================
// $Retina Displays
// ============================================================

@mixin image-2x($image, $width, $height) {

  @media (min--moz-device-pixel-ratio: 1.3),
        (-o-min-device-pixel-ratio: 2.6/2),
        (-webkit-min-device-pixel-ratio: 1.3),
        (min-device-pixel-ratio: 1.3),
        (min-resolution: 1.3dppx) {

    // on retina, use an image that's scaled by 2
    background-image: url($image);
    background-size: $width $height;
  }
}

// ============================================================
// $RGBA Fallback
// ============================================================

@mixin rgba-bg($color, $percent) {
  background: $color;
  background: rgba($color, $percent);
}
